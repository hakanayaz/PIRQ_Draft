//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Maxcut\",\"Name\":\"MixerHamiltonian\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"beta\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":28},\"Item2\":{\"Line\":1,\"Column\":32}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"target\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":42},\"Item2\":{\"Line\":1,\"Column\":48}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" This operation applies the X-rotation to each qubit with parameter beta.\",\"\",\" # Input\",\" ## Beta\",\" Angle by which to perform X rotation\",\" ## target\",\" Target qubit register\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Maxcut\",\"Name\":\"MixerHamiltonian\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Maxcut\",\"Name\":\"MixerHamiltonian\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":69},\"Item2\":{\"Line\":1,\"Column\":78}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Maxcut.MixerHamiltonian\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Maxcut\",\"Name\":\"MixerHamiltonian\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":69},\"Item2\":{\"Line\":1,\"Column\":78}},\"Documentation\":[\"automatically generated QsControlled specialization for Maxcut.MixerHamiltonian\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Maxcut\",\"Name\":\"MixerHamiltonian\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":69},\"Item2\":{\"Line\":1,\"Column\":78}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Maxcut.MixerHamiltonian\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Maxcut\",\"Name\":\"InstanceHamiltonian\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"gamma\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":31},\"Item2\":{\"Line\":1,\"Column\":36}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"edges\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":47},\"Item2\":{\"Line\":1,\"Column\":52}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"target\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":63},\"Item2\":{\"Line\":1,\"Column\":69}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" This operation applies the cost Hamiltonian to evaluate each edge in the graph.\",\" It applies a CNOT to the endpoints, with an RX in the middle, with parameter gamma.\",\"\",\" # Input\",\" ## gamma\",\" Parameter to describe rotation.\",\" ## edges\",\" Edges which describe the graph instance\",\" ## target\",\" Qubit register.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Maxcut\",\"Name\":\"InstanceHamiltonian\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Maxcut\",\"Name\":\"PerformQAOA\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":58,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"numVertices\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":23},\"Item2\":{\"Line\":1,\"Column\":34}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"edges\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":42},\"Item2\":{\"Line\":1,\"Column\":47}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"betas\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":59},\"Item2\":{\"Line\":1,\"Column\":64}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"gammas\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":77},\"Item2\":{\"Line\":1,\"Column\":83}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]}]]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Perform the QAOA\",\"\",\" # Input\",\" ## numVertices\",\" The number of vertices in the input graph\",\" ## edges\",\" The edges which make up the input graph\",\" ## Betas\",\" Parameters for the mixing layer.\",\" ## Gammas\",\" Parameters for the cost layer. The length of the shorter array between betas\",\" and gammas will determine p, how many layers are in the QAOA circuit\",\"\",\" # Output\",\" ## Measurement results as bool array which define a cut\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Maxcut\",\"Name\":\"PerformQAOA\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":58,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Maxcut\",\"Name\":\"CalculatedVal\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":80,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":23}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"edges\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":24},\"Item2\":{\"Line\":1,\"Column\":29}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"measuredResults\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":41},\"Item2\":{\"Line\":1,\"Column\":56}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]]},\"ReturnType\":{\"Case\":\"Double\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Calculate the total cost for the given result.\",\"\",\" # Input\",\" ## measureResults\",\" Bit string returned by circuit\",\"\",\" # Output\",\" ## finalCost\",\" Calculated cost of the specified cut\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Maxcut\",\"Name\":\"CalculatedVal\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":80,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":23}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Maxcut\",\"Name\":\"RunQAOATrials\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":98,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":99,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":24}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"numTrials\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":25},\"Item2\":{\"Line\":1,\"Column\":34}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"verbose\"]},\"Type\":{\"Case\":\"Bool\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":42},\"Item2\":{\"Line\":1,\"Column\":49}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Bool\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Run QAOA for a given number of trials on the defined graph.\",\" Reports on the max cut for the graph and how many of the runs resulted in the answer.\",\"\",\" # Input\",\" ## numTrials\",\" Number of trials to run the QAOA algorithm for.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Maxcut\",\"Name\":\"RunQAOATrials\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\piegu\\\\Documents\\\\PIRQ\\\\PIRQ_Draft\\\\Module 3\\\\Q#\\\\Program.qs\",\"Position\":{\"Item1\":99,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":24}},\"Documentation\":[]}")]
#line hidden
namespace Maxcut
{
    [SourceLocation("C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs", OperationFunctor.Body, 20, 35)]
    [SourceLocation("C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs", OperationFunctor.Adjoint, 20, 35)]
    [SourceLocation("C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs", OperationFunctor.Controlled, 20, 35)]
    [SourceLocation("C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs", OperationFunctor.ControlledAdjoint, 20, 35)]
    public partial class MixerHamiltonian : Unitary<(Double,IQArray<Qubit>)>, ICallable
    {
        public MixerHamiltonian(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Double,IQArray<Qubit>)>, IApplyData
        {
            public In((Double,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item2)?.Qubits;
                }
            }
        }

        String ICallable.Name => "MixerHamiltonian";
        String ICallable.FullName => "Maxcut.MixerHamiltonian";
        protected IUnitary Microsoft__Quantum__Canon__ApplyToEachCA
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rx
        {
            get;
            set;
        }

        public override Func<(Double,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (beta,target) = __in__;
#line 21 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Apply((Microsoft__Quantum__Intrinsic__Rx.Partial(new Func<Qubit, (Double,Qubit)>((__arg1__) => ((-(2D) * beta), __arg1__))), target));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Double,IQArray<Qubit>), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (beta,target) = __in__;
#line 20 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Adjoint.Apply((Microsoft__Quantum__Intrinsic__Rx.Partial(new Func<Qubit, (Double,Qubit)>((__arg1__) => ((-(2D) * beta), __arg1__))), target));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Double,IQArray<Qubit>)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(beta,target)) = __in__;
#line 20 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Intrinsic__Rx.Partial(new Func<Qubit, (Double,Qubit)>((__arg1__) => ((-(2D) * beta), __arg1__))), target)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Double,IQArray<Qubit>)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(beta,target)) = __in__;
#line 20 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Adjoint.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Intrinsic__Rx.Partial(new Func<Qubit, (Double,Qubit)>((__arg1__) => ((-(2D) * beta), __arg1__))), target)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Canon__ApplyToEachCA = this.__Factory__.Get<IUnitary>(typeof(global::Microsoft.Quantum.Canon.ApplyToEachCA<>));
            this.Microsoft__Quantum__Intrinsic__Rx = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rx));
        }

        public override IApplyData __DataIn__((Double,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Double beta, IQArray<Qubit> target)
        {
            return __m__.Run<MixerHamiltonian, (Double,IQArray<Qubit>), QVoid>((beta, target));
        }
    }

    [SourceLocation("C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs", OperationFunctor.Body, 35, 59)]
    public partial class InstanceHamiltonian : Operation<(Double,IQArray<IQArray<Int64>>,IQArray<Qubit>), QVoid>, ICallable
    {
        public InstanceHamiltonian(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Double,IQArray<IQArray<Int64>>,IQArray<Qubit>)>, IApplyData
        {
            public In((Double,IQArray<IQArray<Int64>>,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item3)?.Qubits;
                }
            }
        }

        String ICallable.Name => "InstanceHamiltonian";
        String ICallable.FullName => "Maxcut.InstanceHamiltonian";
        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rz
        {
            get;
            set;
        }

        public override Func<(Double,IQArray<IQArray<Int64>>,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (gamma,edges,target) = __in__;
#line 36 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            foreach (var edge in edges)
#line hidden
            {
#line 37 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                Microsoft__Quantum__Intrinsic__CNOT.Apply((target[edge[0L]], target[edge[1L]]));
#line 38 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                Microsoft__Quantum__Intrinsic__Rz.Apply((gamma, target[edge[1L]]));
#line 39 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                Microsoft__Quantum__Intrinsic__CNOT.Apply((target[edge[0L]], target[edge[1L]]));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.Microsoft__Quantum__Intrinsic__Rz = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rz));
        }

        public override IApplyData __DataIn__((Double,IQArray<IQArray<Int64>>,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Double gamma, IQArray<IQArray<Int64>> edges, IQArray<Qubit> target)
        {
            return __m__.Run<InstanceHamiltonian, (Double,IQArray<IQArray<Int64>>,IQArray<Qubit>), QVoid>((gamma, edges, target));
        }
    }

    [SourceLocation("C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs", OperationFunctor.Body, 59, 81)]
    public partial class PerformQAOA : Operation<(Int64,IQArray<IQArray<Int64>>,IQArray<Double>,IQArray<Double>), IQArray<Boolean>>, ICallable
    {
        public PerformQAOA(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,IQArray<IQArray<Int64>>,IQArray<Double>,IQArray<Double>)>, IApplyData
        {
            public In((Int64,IQArray<IQArray<Int64>>,IQArray<Double>,IQArray<Double>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "PerformQAOA";
        String ICallable.FullName => "Maxcut.PerformQAOA";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ApplyToEach
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__Zipped
        {
            get;
            set;
        }

        protected ICallable<(Double,IQArray<IQArray<Int64>>,IQArray<Qubit>), QVoid> InstanceHamiltonian__
        {
            get;
            set;
        }

        protected IUnitary<(Double,IQArray<Qubit>)> MixerHamiltonian__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Result>, IQArray<Boolean>> Microsoft__Quantum__Convert__ResultArrayAsBoolArray
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, IQArray<Result>> Microsoft__Quantum__Measurement__MultiM
        {
            get;
            set;
        }

        public override Func<(Int64,IQArray<IQArray<Int64>>,IQArray<Double>,IQArray<Double>), IQArray<Boolean>> __Body__ => (__in__) =>
        {
            var (numVertices,edges,betas,gammas) = __in__;
#line 61 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
#line hidden
            var __arg1__ = false;
#line 61 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            var result = new QArray<Boolean>(QArray.Filled(() => __arg1__, numVertices));
#line hidden
            {
#line 62 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                var bitString = Allocate__.Apply(numVertices);
#line hidden
                bool __arg2__ = true;
                try
                {
#line 63 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyToEach.Apply((Microsoft__Quantum__Intrinsic__H, bitString));
#line 64 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                    foreach (var (beta,gamma) in Microsoft__Quantum__Arrays__Zipped.Apply<IQArray<(Double,Double)>>((betas, gammas)))
#line hidden
                    {
#line 65 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                        InstanceHamiltonian__.Apply((gamma, edges, bitString));
#line 66 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                        MixerHamiltonian__.Apply((beta, bitString));
                    }

#line 68 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                    return Microsoft__Quantum__Convert__ResultArrayAsBoolArray.Apply(Microsoft__Quantum__Measurement__MultiM.Apply(bitString));
                }
#line hidden
                catch
                {
                    __arg2__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg2__)
                    {
#line hidden
                        Release__.Apply(bitString);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Canon__ApplyToEach = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ApplyToEach<>));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Arrays__Zipped = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Zipped<,>));
            this.InstanceHamiltonian__ = this.__Factory__.Get<ICallable<(Double,IQArray<IQArray<Int64>>,IQArray<Qubit>), QVoid>>(typeof(InstanceHamiltonian));
            this.MixerHamiltonian__ = this.__Factory__.Get<IUnitary<(Double,IQArray<Qubit>)>>(typeof(MixerHamiltonian));
            this.Microsoft__Quantum__Convert__ResultArrayAsBoolArray = this.__Factory__.Get<ICallable<IQArray<Result>, IQArray<Boolean>>>(typeof(global::Microsoft.Quantum.Convert.ResultArrayAsBoolArray));
            this.Microsoft__Quantum__Measurement__MultiM = this.__Factory__.Get<ICallable<IQArray<Qubit>, IQArray<Result>>>(typeof(global::Microsoft.Quantum.Measurement.MultiM));
        }

        public override IApplyData __DataIn__((Int64,IQArray<IQArray<Int64>>,IQArray<Double>,IQArray<Double>) data) => new In(data);
        public override IApplyData __DataOut__(IQArray<Boolean> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Boolean>> Run(IOperationFactory __m__, Int64 numVertices, IQArray<IQArray<Int64>> edges, IQArray<Double> betas, IQArray<Double> gammas)
        {
            return __m__.Run<PerformQAOA, (Int64,IQArray<IQArray<Int64>>,IQArray<Double>,IQArray<Double>), IQArray<Boolean>>((numVertices, edges, betas, gammas));
        }
    }

    [SourceLocation("C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs", OperationFunctor.Body, 81, 100)]
    public partial class CalculatedVal : Function<(IQArray<IQArray<Int64>>,IQArray<Boolean>), Double>, ICallable
    {
        public CalculatedVal(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<IQArray<Int64>>,IQArray<Boolean>)>, IApplyData
        {
            public In((IQArray<IQArray<Int64>>,IQArray<Boolean>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "CalculatedVal";
        String ICallable.FullName => "Maxcut.CalculatedVal";
        protected ICallable<(Boolean,Boolean), Boolean> Microsoft__Quantum__Logical__Xor
        {
            get;
            set;
        }

        public override Func<(IQArray<IQArray<Int64>>,IQArray<Boolean>), Double> __Body__ => (__in__) =>
        {
            var (edges,measuredResults) = __in__;
#line 82 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            var finalCost = 0D;
#line 83 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            foreach (var edge in edges)
#line hidden
            {
#line 84 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                if (Microsoft__Quantum__Logical__Xor.Apply((measuredResults[edge[0L]], measuredResults[edge[1L]])))
                {
#line 85 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                    finalCost = (finalCost - 1D);
                }
            }

#line 88 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            return finalCost;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Logical__Xor = this.__Factory__.Get<ICallable<(Boolean,Boolean), Boolean>>(typeof(global::Microsoft.Quantum.Logical.Xor));
        }

        public override IApplyData __DataIn__((IQArray<IQArray<Int64>>,IQArray<Boolean>) data) => new In(data);
        public override IApplyData __DataOut__(Double data) => new QTuple<Double>(data);
        public static System.Threading.Tasks.Task<Double> Run(IOperationFactory __m__, IQArray<IQArray<Int64>> edges, IQArray<Boolean> measuredResults)
        {
            return __m__.Run<CalculatedVal, (IQArray<IQArray<Int64>>,IQArray<Boolean>), Double>((edges, measuredResults));
        }
    }

    [SourceLocation("C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs", OperationFunctor.Body, 100, -1)]
    public partial class RunQAOATrials : Operation<(Int64,Boolean), QVoid>, ICallable
    {
        public RunQAOATrials(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Boolean)>, IApplyData
        {
            public In((Int64,Boolean) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "RunQAOATrials";
        String ICallable.FullName => "Maxcut.RunQAOATrials";
        public static EntryPointInfo<(Int64,Boolean), QVoid> Info => new EntryPointInfo<(Int64,Boolean), QVoid>(typeof(RunQAOATrials));
        protected ICallable<(Int64,IQArray<IQArray<Int64>>,IQArray<Double>,IQArray<Double>), IQArray<Boolean>> PerformQAOA__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<IQArray<Int64>>,IQArray<Boolean>), Double> CalculatedVal__
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        protected ICallable<Double, Double> Microsoft__Quantum__Math__AbsD
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        public override Func<(Int64,Boolean), QVoid> __Body__ => (__in__) =>
        {
            var (numTrials,verbose) = __in__;
#line 109 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            var gammas = (IQArray<Double>)new QArray<Double>(0.83577332D);
#line 110 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            var betas = (IQArray<Double>)new QArray<Double>(1.13572111D);
#line 112 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            var limit = 1E-06D;
#line 113 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            var numVertices = 4L;
#line 114 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            var edges = (IQArray<IQArray<Int64>>)new QArray<IQArray<Int64>>(new QArray<Int64>(0L, 1L), new QArray<Int64>(0L, 3L), new QArray<Int64>(1L, 2L), new QArray<Int64>(2L, 3L));
#line 116 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            var bestValue = 0D;
#line 117 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            var maxCut = new QArray<Boolean>(false, false, false, false, false);
#line 118 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            var successNumber = 0L;
#line 120 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            foreach (var trial in new QRange(0L, numTrials))
#line hidden
            {
#line 121 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                var result = (IQArray<Boolean>)PerformQAOA__.Apply((numVertices, edges, betas, gammas));
#line 122 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                var value = (-(1D) * CalculatedVal__.Apply((edges, result)));
#line 123 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                if (verbose)
                {
#line 124 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                    Message__.Apply(String.Format("result = {0}, value = {1}", result, value));
                }

#line 126 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                if ((value > (bestValue + limit)))
                {
#line 128 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                    bestValue = value;
#line 129 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                    maxCut = new QArray<Boolean>(result);
#line 130 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                    successNumber = 1L;
                }
                else if ((Microsoft__Quantum__Math__AbsD.Apply((value - bestValue)) < limit))
                {
#line 132 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
                    successNumber = (successNumber + 1L);
                }
            }

#line 136 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            var runPercentage = ((Microsoft__Quantum__Convert__IntAsDouble.Apply(successNumber) * 100D) / Microsoft__Quantum__Convert__IntAsDouble.Apply(numTrials));
#line 137 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            Message__.Apply("Simulation is complete\n");
#line 138 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            Message__.Apply(String.Format("Best bitstring found: {0}, cost = {1}", maxCut, bestValue));
#line 139 "C:\\Users\\piegu\\Documents\\PIRQ\\PIRQ_Draft\\Module 3\\Q#\\Program.qs"
            Message__.Apply(String.Format("{0}% of runs found the max cut\n", runPercentage));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.PerformQAOA__ = this.__Factory__.Get<ICallable<(Int64,IQArray<IQArray<Int64>>,IQArray<Double>,IQArray<Double>), IQArray<Boolean>>>(typeof(PerformQAOA));
            this.CalculatedVal__ = this.__Factory__.Get<ICallable<(IQArray<IQArray<Int64>>,IQArray<Boolean>), Double>>(typeof(CalculatedVal));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
            this.Microsoft__Quantum__Math__AbsD = this.__Factory__.Get<ICallable<Double, Double>>(typeof(global::Microsoft.Quantum.Math.AbsD));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
        }

        public override IApplyData __DataIn__((Int64,Boolean) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Int64 numTrials, Boolean verbose)
        {
            return __m__.Run<RunQAOATrials, (Int64,Boolean), QVoid>((numTrials, verbose));
        }
    }
}