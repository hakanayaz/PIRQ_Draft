---------------------------------IR DUMP: main----------------------------------
label 0:
    $2load_global.0 = global(Qubit: <class 'numba.experimental.jitclass.base.Qubit'>) ['$2load_global.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    $const6.2 = const(int, 0)                ['$const6.2']
    q1 = call $2load_global.0($const4.1, $const6.2, func=$2load_global.0, args=[Var($const4.1, main.py:30), Var($const6.2, main.py:30)], kws=(), vararg=None, target=None) ['$2load_global.0', '$const4.1', '$const6.2', 'q1']
    $12load_global.4 = global(Qubit: <class 'numba.experimental.jitclass.base.Qubit'>) ['$12load_global.4']
    $const14.5 = const(int, 0)               ['$const14.5']
    $const16.6 = const(int, 1)               ['$const16.6']
    q2 = call $12load_global.4($const14.5, $const16.6, func=$12load_global.4, args=[Var($const14.5, main.py:31), Var($const16.6, main.py:31)], kws=(), vararg=None, target=None) ['$12load_global.4', '$const14.5', '$const16.6', 'q2']
    $24load_method.9 = getattr(value=q1, attr=CX) ['$24load_method.9', 'q1']
    $28call_method.11 = call $24load_method.9(q2, func=$24load_method.9, args=[Var(q2, main.py:31)], kws=(), vararg=None, target=None) ['$24load_method.9', '$28call_method.11', 'q2']
    $34load_method.13 = getattr(value=q1, attr=print) ['$34load_method.13', 'q1']
    $36call_method.14 = call $34load_method.13(func=$34load_method.13, args=[], kws=(), vararg=None, target=None) ['$34load_method.13', '$36call_method.14']
    $42load_method.16 = getattr(value=q2, attr=print) ['$42load_method.16', 'q2']
    $44call_method.17 = call $42load_method.16(func=$42load_method.16, args=[], kws=(), vararg=None, target=None) ['$42load_method.16', '$44call_method.17']
    $const48.18 = const(NoneType, None)      ['$const48.18']
    $50return_value.19 = cast(value=$const48.18) ['$50return_value.19', '$const48.18']
    return $50return_value.19                ['$50return_value.19']

---------------------------------IR DUMP: main----------------------------------
label 0:
    $2load_global.0 = global(Qubit: <class 'numba.experimental.jitclass.base.Qubit'>) ['$2load_global.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    $const6.2 = const(int, 0)                ['$const6.2']
    q1 = call $2load_global.0($const4.1, $const6.2, func=$2load_global.0, args=[Var($const4.1, main.py:30), Var($const6.2, main.py:30)], kws=(), vararg=None, target=None) ['$2load_global.0', '$const4.1', '$const6.2', 'q1']
    $12load_global.4 = global(Qubit: <class 'numba.experimental.jitclass.base.Qubit'>) ['$12load_global.4']
    $const14.5 = const(int, 0)               ['$const14.5']
    $const16.6 = const(int, 1)               ['$const16.6']
    q2 = call $12load_global.4($const14.5, $const16.6, func=$12load_global.4, args=[Var($const14.5, main.py:31), Var($const16.6, main.py:31)], kws=(), vararg=None, target=None) ['$12load_global.4', '$const14.5', '$const16.6', 'q2']
    $24load_method.9 = getattr(value=q1, attr=CX) ['$24load_method.9', 'q1']
    $28call_method.11 = call $24load_method.9(q2, func=$24load_method.9, args=[Var(q2, main.py:31)], kws=(), vararg=None, target=None) ['$24load_method.9', '$28call_method.11', 'q2']
    $34load_method.13 = getattr(value=q1, attr=print) ['$34load_method.13', 'q1']
    $36call_method.14 = call $34load_method.13(func=$34load_method.13, args=[], kws=(), vararg=None, target=None) ['$34load_method.13', '$36call_method.14']
    $42load_method.16 = getattr(value=q2, attr=print) ['$42load_method.16', 'q2']
    $44call_method.17 = call $42load_method.16(func=$42load_method.16, args=[], kws=(), vararg=None, target=None) ['$42load_method.16', '$44call_method.17']
    $const48.18 = const(NoneType, None)      ['$const48.18']
    $50return_value.19 = cast(value=$const48.18) ['$50return_value.19', '$const48.18']
    return $50return_value.19                ['$50return_value.19']

----------------------------IR DUMP: Qubit.__init__-----------------------------
label 0:
    self = arg(0, name=self)                 ['self']
    u = arg(1, name=u)                       ['u']
    d = arg(2, name=d)                       ['d']
    (self).up = u                            ['self', 'u']
    (self).down = d                          ['d', 'self']
    $const14.4 = const(NoneType, None)       ['$const14.4']
    $16return_value.5 = cast(value=$const14.4) ['$16return_value.5', '$const14.4']
    return $16return_value.5                 ['$16return_value.5']

----------------------------IR DUMP: Qubit.__init__-----------------------------
label 0:
    self = arg(0, name=self)                 ['self']
    u = arg(1, name=u)                       ['u']
    d = arg(2, name=d)                       ['d']
    (self).up = u                            ['self', 'u']
    (self).down = d                          ['d', 'self']
    $const14.4 = const(NoneType, None)       ['$const14.4']
    $16return_value.5 = cast(value=$const14.4) ['$16return_value.5', '$const14.4']
    return $16return_value.5                 ['$16return_value.5']

---------------LLVM DUMP <function descriptor 'Qubit.__init__$2'>---------------
; ModuleID = "Qubit.__init__$2"
target triple = "x86_64-pc-windows-msvc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

@"_ZN08NumbaEnv8__main__5Qubit12__init___242B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_281_2923Literal_5bint_5d_280_29" = common global i8* null
define i32 @"_ZN8__main__5Qubit12__init___242B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_281_2923Literal_5bint_5d_280_29"(i8** noalias nocapture %"retptr", {i8*, i32, i8*}** noalias nocapture %"excinfo", i8* %"arg.self.0", {float, float}* %"arg.self.1", i64 %"arg.u", i64 %"arg.d") 
{
entry:
  %"inserted.meminfo" = insertvalue {i8*, {float, float}*} undef, i8* %"arg.self.0", 0
  %"inserted.data" = insertvalue {i8*, {float, float}*} %"inserted.meminfo", {float, float}* %"arg.self.1", 1
  %".10" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".10"
  %".21" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".21"
  br label %"B0"
B0:
  %"extracted.meminfo" = extractvalue {i8*, {float, float}*} %"inserted.data", 0
  %"extracted.data" = extractvalue {i8*, {float, float}*} %"inserted.data", 1
  call void @"NRT_incref"(i8* %"extracted.meminfo")
  %".9" = sitofp i64 1 to float
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".10"
  store {i8*, {float, float}*} %"inserted.data", {i8*, {float, float}*}* %".10"
  %".14" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".10", i32 0, i32 1
  %".15" = load {float, float}*, {float, float}** %".14"
  %".16" = getelementptr inbounds {float, float}, {float, float}* %".15", i32 0, i32 0
  %".17" = load float, float* %".16"
  %".18" = getelementptr inbounds {float, float}, {float, float}* %".15", i32 0, i32 0
  store float %".9", float* %".18"
  %".20" = sitofp i64 0 to float
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".21"
  store {i8*, {float, float}*} %"inserted.data", {i8*, {float, float}*}* %".21"
  %".25" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".21", i32 0, i32 1
  %".26" = load {float, float}*, {float, float}** %".25"
  %".27" = getelementptr inbounds {float, float}, {float, float}* %".26", i32 0, i32 1
  %".28" = load float, float* %".27"
  %".29" = getelementptr inbounds {float, float}, {float, float}* %".26", i32 0, i32 1
  store float %".20", float* %".29"
  %"extracted.meminfo.1" = extractvalue {i8*, {float, float}*} %"inserted.data", 0
  %"extracted.data.1" = extractvalue {i8*, {float, float}*} %"inserted.data", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.1")
  store i8* null, i8** %"retptr"
  ret i32 0
}

declare void @"NRT_incref"(i8* noalias nocapture %".1") 

declare void @"NRT_decref"(i8* noalias nocapture %".1") 

!numba_args_may_always_need_nrt = !{ !0 }
!0 = !{ i32 (i8**, {i8*, i32, i8*}**, i8*, {float, float}*, i64, i64)* @"_ZN8__main__5Qubit12__init___242B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_281_2923Literal_5bint_5d_280_29" }
================================================================================
----------------------------IR DUMP: Qubit.__init__-----------------------------
label 0:
    self = arg(0, name=self)                 ['self']
    u = arg(1, name=u)                       ['u']
    d = arg(2, name=d)                       ['d']
    (self).up = u                            ['self', 'u']
    (self).down = d                          ['d', 'self']
    $const14.4 = const(NoneType, None)       ['$const14.4']
    $16return_value.5 = cast(value=$const14.4) ['$16return_value.5', '$const14.4']
    return $16return_value.5                 ['$16return_value.5']

----------------------------IR DUMP: Qubit.__init__-----------------------------
label 0:
    self = arg(0, name=self)                 ['self']
    u = arg(1, name=u)                       ['u']
    d = arg(2, name=d)                       ['d']
    (self).up = u                            ['self', 'u']
    (self).down = d                          ['d', 'self']
    $const14.4 = const(NoneType, None)       ['$const14.4']
    $16return_value.5 = cast(value=$const14.4) ['$16return_value.5', '$const14.4']
    return $16return_value.5                 ['$16return_value.5']

---------------LLVM DUMP <function descriptor 'Qubit.__init__$3'>---------------
; ModuleID = "Qubit.__init__$3"
target triple = "x86_64-pc-windows-msvc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

@"_ZN08NumbaEnv8__main__5Qubit12__init___243B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_280_2923Literal_5bint_5d_281_29" = common global i8* null
define i32 @"_ZN8__main__5Qubit12__init___243B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_280_2923Literal_5bint_5d_281_29"(i8** noalias nocapture %"retptr", {i8*, i32, i8*}** noalias nocapture %"excinfo", i8* %"arg.self.0", {float, float}* %"arg.self.1", i64 %"arg.u", i64 %"arg.d") 
{
entry:
  %"inserted.meminfo" = insertvalue {i8*, {float, float}*} undef, i8* %"arg.self.0", 0
  %"inserted.data" = insertvalue {i8*, {float, float}*} %"inserted.meminfo", {float, float}* %"arg.self.1", 1
  %".10" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".10"
  %".21" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".21"
  br label %"B0"
B0:
  %"extracted.meminfo" = extractvalue {i8*, {float, float}*} %"inserted.data", 0
  %"extracted.data" = extractvalue {i8*, {float, float}*} %"inserted.data", 1
  call void @"NRT_incref"(i8* %"extracted.meminfo")
  %".9" = sitofp i64 0 to float
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".10"
  store {i8*, {float, float}*} %"inserted.data", {i8*, {float, float}*}* %".10"
  %".14" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".10", i32 0, i32 1
  %".15" = load {float, float}*, {float, float}** %".14"
  %".16" = getelementptr inbounds {float, float}, {float, float}* %".15", i32 0, i32 0
  %".17" = load float, float* %".16"
  %".18" = getelementptr inbounds {float, float}, {float, float}* %".15", i32 0, i32 0
  store float %".9", float* %".18"
  %".20" = sitofp i64 1 to float
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".21"
  store {i8*, {float, float}*} %"inserted.data", {i8*, {float, float}*}* %".21"
  %".25" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".21", i32 0, i32 1
  %".26" = load {float, float}*, {float, float}** %".25"
  %".27" = getelementptr inbounds {float, float}, {float, float}* %".26", i32 0, i32 1
  %".28" = load float, float* %".27"
  %".29" = getelementptr inbounds {float, float}, {float, float}* %".26", i32 0, i32 1
  store float %".20", float* %".29"
  %"extracted.meminfo.1" = extractvalue {i8*, {float, float}*} %"inserted.data", 0
  %"extracted.data.1" = extractvalue {i8*, {float, float}*} %"inserted.data", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.1")
  store i8* null, i8** %"retptr"
  ret i32 0
}

declare void @"NRT_incref"(i8* noalias nocapture %".1") 

declare void @"NRT_decref"(i8* noalias nocapture %".1") 

!numba_args_may_always_need_nrt = !{ !0 }
!0 = !{ i32 (i8**, {i8*, i32, i8*}**, i8*, {float, float}*, i64, i64)* @"_ZN8__main__5Qubit12__init___243B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_280_2923Literal_5bint_5d_281_29" }
================================================================================
-------------------------------IR DUMP: Qubit.CX--------------------------------
label 0:
    self = arg(0, name=self)                 ['self']
    control = arg(1, name=control)           ['control']
    $4load_attr.1 = getattr(value=control, attr=down) ['$4load_attr.1', 'control']
    $const6.2 = const(int, 1)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, main.py:21),), kws=(), vararg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $14load_method.1 = getattr(value=self, attr=X) ['$14load_method.1', 'self']
    $16call_method.2 = call $14load_method.1(func=$14load_method.1, args=[], kws=(), vararg=None, target=None) ['$14load_method.1', '$16call_method.2']
    jump 20                                  []
label 20:
    $const20.0 = const(NoneType, None)       ['$const20.0']
    $22return_value.1 = cast(value=$const20.0) ['$22return_value.1', '$const20.0']
    return $22return_value.1                 ['$22return_value.1']

-------------------------------IR DUMP: Qubit.CX--------------------------------
label 0:
    self = arg(0, name=self)                 ['self']
    control = arg(1, name=control)           ['control']
    $4load_attr.1 = getattr(value=control, attr=down) ['$4load_attr.1', 'control']
    $const6.2 = const(int, 1)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, main.py:21),), kws=(), vararg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $14load_method.1 = getattr(value=self, attr=X) ['$14load_method.1', 'self']
    $16call_method.2 = call $14load_method.1(func=$14load_method.1, args=[], kws=(), vararg=None, target=None) ['$14load_method.1', '$16call_method.2']
    jump 20                                  []
label 20:
    $const20.0 = const(NoneType, None)       ['$const20.0']
    $22return_value.1 = cast(value=$const20.0) ['$22return_value.1', '$const20.0']
    return $22return_value.1                 ['$22return_value.1']

--------------------------------IR DUMP: Qubit.X--------------------------------
label 0:
    self = arg(0, name=self)                 ['self']
    temp = getattr(value=self, attr=up)      ['self', 'temp']
    $10load_attr.3 = getattr(value=self, attr=down) ['$10load_attr.3', 'self']
    (self).up = $10load_attr.3               ['$10load_attr.3', 'self']
    (self).down = temp                       ['self', 'temp']
    $const22.7 = const(NoneType, None)       ['$const22.7']
    $24return_value.8 = cast(value=$const22.7) ['$24return_value.8', '$const22.7']
    return $24return_value.8                 ['$24return_value.8']

--------------------------------IR DUMP: Qubit.X--------------------------------
label 0:
    self = arg(0, name=self)                 ['self']
    temp = getattr(value=self, attr=up)      ['self', 'temp']
    $10load_attr.3 = getattr(value=self, attr=down) ['$10load_attr.3', 'self']
    (self).up = $10load_attr.3               ['$10load_attr.3', 'self']
    (self).down = temp                       ['self', 'temp']
    $const22.7 = const(NoneType, None)       ['$const22.7']
    $24return_value.8 = cast(value=$const22.7) ['$24return_value.8', '$const22.7']
    return $24return_value.8                 ['$24return_value.8']

------------------LLVM DUMP <function descriptor 'Qubit.X$5'>-------------------
; ModuleID = "Qubit.X$5"
target triple = "x86_64-pc-windows-msvc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

@"_ZN08NumbaEnv8__main__5Qubit5X_245B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE" = common global i8* null
define i32 @"_ZN8__main__5Qubit5X_245B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"(i8** noalias nocapture %"retptr", {i8*, i32, i8*}** noalias nocapture %"excinfo", i8* %"arg.self.0", {float, float}* %"arg.self.1") 
{
entry:
  %"inserted.meminfo" = insertvalue {i8*, {float, float}*} undef, i8* %"arg.self.0", 0
  %"inserted.data" = insertvalue {i8*, {float, float}*} %"inserted.meminfo", {float, float}* %"arg.self.1", 1
  %".7" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".7"
  %".15" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".15"
  %".23" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".23"
  %".33" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".33"
  br label %"B0"
B0:
  %"extracted.meminfo" = extractvalue {i8*, {float, float}*} %"inserted.data", 0
  %"extracted.data" = extractvalue {i8*, {float, float}*} %"inserted.data", 1
  call void @"NRT_incref"(i8* %"extracted.meminfo")
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".7"
  store {i8*, {float, float}*} %"inserted.data", {i8*, {float, float}*}* %".7"
  %".11" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".7", i32 0, i32 1
  %".12" = load {float, float}*, {float, float}** %".11"
  %".13" = getelementptr inbounds {float, float}, {float, float}* %".12", i32 0, i32 0
  %".14" = load float, float* %".13"
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".15"
  store {i8*, {float, float}*} %"inserted.data", {i8*, {float, float}*}* %".15"
  %".19" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".15", i32 0, i32 1
  %".20" = load {float, float}*, {float, float}** %".19"
  %".21" = getelementptr inbounds {float, float}, {float, float}* %".20", i32 0, i32 1
  %".22" = load float, float* %".21"
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".23"
  store {i8*, {float, float}*} %"inserted.data", {i8*, {float, float}*}* %".23"
  %".27" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".23", i32 0, i32 1
  %".28" = load {float, float}*, {float, float}** %".27"
  %".29" = getelementptr inbounds {float, float}, {float, float}* %".28", i32 0, i32 0
  %".30" = load float, float* %".29"
  %".31" = getelementptr inbounds {float, float}, {float, float}* %".28", i32 0, i32 0
  store float %".22", float* %".31"
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".33"
  store {i8*, {float, float}*} %"inserted.data", {i8*, {float, float}*}* %".33"
  %".37" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".33", i32 0, i32 1
  %".38" = load {float, float}*, {float, float}** %".37"
  %".39" = getelementptr inbounds {float, float}, {float, float}* %".38", i32 0, i32 1
  %".40" = load float, float* %".39"
  %".41" = getelementptr inbounds {float, float}, {float, float}* %".38", i32 0, i32 1
  store float %".14", float* %".41"
  %"extracted.meminfo.1" = extractvalue {i8*, {float, float}*} %"inserted.data", 0
  %"extracted.data.1" = extractvalue {i8*, {float, float}*} %"inserted.data", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.1")
  store i8* null, i8** %"retptr"
  ret i32 0
}

declare void @"NRT_incref"(i8* noalias nocapture %".1") 

declare void @"NRT_decref"(i8* noalias nocapture %".1") 

!numba_args_may_always_need_nrt = !{ !0 }
!0 = !{ i32 (i8**, {i8*, i32, i8*}**, i8*, {float, float}*)* @"_ZN8__main__5Qubit5X_245B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE" }
================================================================================
------------------LLVM DUMP <function descriptor 'Qubit.CX$4'>------------------
; ModuleID = "Qubit.CX$4"
target triple = "x86_64-pc-windows-msvc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

@"_ZN08NumbaEnv8__main__5Qubit6CX_244B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE" = common global i8* null
define i32 @"_ZN8__main__5Qubit6CX_244B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"(i8** noalias nocapture %"retptr", {i8*, i32, i8*}** noalias nocapture %"excinfo", i8* %"arg.self.0", {float, float}* %"arg.self.1", i8* %"arg.control.0", {float, float}* %"arg.control.1") 
{
entry:
  %"inserted.meminfo" = insertvalue {i8*, {float, float}*} undef, i8* %"arg.self.0", 0
  %"inserted.data" = insertvalue {i8*, {float, float}*} %"inserted.meminfo", {float, float}* %"arg.self.1", 1
  %"inserted.meminfo.1" = insertvalue {i8*, {float, float}*} undef, i8* %"arg.control.0", 0
  %"inserted.data.1" = insertvalue {i8*, {float, float}*} %"inserted.meminfo.1", {float, float}* %"arg.control.1", 1
  %"self" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %"self"
  %".12" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".12"
  %".30" = alloca i8*
  store i8* null, i8** %".30"
  %"excinfo.1" = alloca {i8*, i32, i8*}*
  store {i8*, i32, i8*}* null, {i8*, i32, i8*}** %"excinfo.1"
  %"try_state" = alloca i64
  store i64 0, i64* %"try_state"
  br label %"B0"
B0:
  %"extracted.meminfo" = extractvalue {i8*, {float, float}*} %"inserted.data", 0
  %"extracted.data" = extractvalue {i8*, {float, float}*} %"inserted.data", 1
  call void @"NRT_incref"(i8* %"extracted.meminfo")
  store {i8*, {float, float}*} %"inserted.data", {i8*, {float, float}*}* %"self"
  %"extracted.meminfo.1" = extractvalue {i8*, {float, float}*} %"inserted.data.1", 0
  %"extracted.data.1" = extractvalue {i8*, {float, float}*} %"inserted.data.1", 1
  call void @"NRT_incref"(i8* %"extracted.meminfo.1")
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".12"
  store {i8*, {float, float}*} %"inserted.data.1", {i8*, {float, float}*}* %".12"
  %".16" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".12", i32 0, i32 1
  %".17" = load {float, float}*, {float, float}** %".16"
  %".18" = getelementptr inbounds {float, float}, {float, float}* %".17", i32 0, i32 1
  %".19" = load float, float* %".18"
  %"extracted.meminfo.2" = extractvalue {i8*, {float, float}*} %"inserted.data.1", 0
  %"extracted.data.2" = extractvalue {i8*, {float, float}*} %"inserted.data.1", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.2")
  %".21" = fpext float %".19" to double
  %".22" = sitofp i64 1 to double
  %".23" = fcmp oeq double %".21", %".22"
  br i1 %".23", label %"B12", label %"B20"
B12:
  %".25" = load {i8*, {float, float}*}, {i8*, {float, float}*}* %"self"
  %"extracted.meminfo.3" = extractvalue {i8*, {float, float}*} %".25", 0
  %"extracted.data.3" = extractvalue {i8*, {float, float}*} %".25", 1
  call void @"NRT_incref"(i8* %"extracted.meminfo.3")
  %".27" = load {i8*, {float, float}*}, {i8*, {float, float}*}* %"self"
  %"extracted.meminfo.4" = extractvalue {i8*, {float, float}*} %".27", 0
  %"extracted.data.4" = extractvalue {i8*, {float, float}*} %".27", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.4")
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %"self"
  store i8* null, i8** %".30"
  %"extracted.meminfo.5" = extractvalue {i8*, {float, float}*} %".25", 0
  %"extracted.data.5" = extractvalue {i8*, {float, float}*} %".25", 1
  %".34" = call i32 @"_ZN8__main__5Qubit5X_245B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"(i8** %".30", {i8*, i32, i8*}** %"excinfo.1", i8* %"extracted.meminfo.5", {float, float}* %"extracted.data.5")
  %".35" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo.1"
  %".36" = icmp eq i32 %".34", 0
  %".37" = icmp eq i32 %".34", -2
  %".38" = icmp eq i32 %".34", -1
  %".39" = icmp eq i32 %".34", -3
  %".40" = or i1 %".36", %".37"
  %".41" = xor i1 %".40", -1
  %".42" = icmp sge i32 %".34", 1
  %".43" = select i1 %".42", {i8*, i32, i8*}* %".35", {i8*, i32, i8*}* undef
  %".44" = load i8*, i8** %".30"
  br i1 %".41", label %"B12.if", label %"B12.endif", !prof !2
B20:
  %".58" = load {i8*, {float, float}*}, {i8*, {float, float}*}* %"self"
  %"extracted.meminfo.7" = extractvalue {i8*, {float, float}*} %".58", 0
  %"extracted.data.7" = extractvalue {i8*, {float, float}*} %".58", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.7")
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %"self"
  store i8* null, i8** %"retptr"
  ret i32 0
B12.if:
  store i64 0, i64* %"try_state"
  %".48" = load i64, i64* %"try_state"
  %".49" = icmp ugt i64 %".48", 0
  %".50" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo"
  store {i8*, i32, i8*}* %".43", {i8*, i32, i8*}** %"excinfo"
  %".52" = xor i1 %".49", -1
  br i1 %".52", label %"B12.if.if", label %"B12.if.endif"
B12.endif:
  %"extracted.meminfo.6" = extractvalue {i8*, {float, float}*} %".25", 0
  %"extracted.data.6" = extractvalue {i8*, {float, float}*} %".25", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.6")
  br label %"B20"
B12.if.if:
  ret i32 %".34", !ret_is_raise !3
B12.if.endif:
  br label %"B12.endif"
}

declare void @"NRT_incref"(i8* noalias nocapture %".1") 

declare void @"NRT_decref"(i8* noalias nocapture %".1") 

declare i32 @"_ZN8__main__5Qubit5X_245B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"(i8** noalias nocapture %"retptr", {i8*, i32, i8*}** noalias nocapture %"excinfo", i8* %"arg.self.0", {float, float}* %"arg.self.1") 

!numba_args_may_always_need_nrt = !{ !0, !1 }
!0 = !{ i32 (i8**, {i8*, i32, i8*}**, i8*, {float, float}*, i8*, {float, float}*)* @"_ZN8__main__5Qubit6CX_244B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE" }
!1 = !{ i32 (i8**, {i8*, i32, i8*}**, i8*, {float, float}*)* @"_ZN8__main__5Qubit5X_245B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE" }
!2 = !{ !"branch_weights", i32 1, i32 99 }
!3 = !{ i1 1 }
================================================================================
------------------------------IR DUMP: Qubit.print------------------------------
label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(print: <built-in function print>) ['$2load_global.0']
    $const4.1 = const(str, Spin Up: )        ['$const4.1']
    $8load_attr.3 = getattr(value=self, attr=up) ['$8load_attr.3', 'self']
    $10call_function.4 = call $2load_global.0($const4.1, $8load_attr.3, func=$2load_global.0, args=[Var($const4.1, main.py:25), Var($8load_attr.3, main.py:25)], kws=(), vararg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_attr.3', '$const4.1']
    $14load_global.5 = global(print: <built-in function print>) ['$14load_global.5']
    $const16.6 = const(str, Spin Down: )     ['$const16.6']
    $20load_attr.8 = getattr(value=self, attr=down) ['$20load_attr.8', 'self']
    $22call_function.9 = call $14load_global.5($const16.6, $20load_attr.8, func=$14load_global.5, args=[Var($const16.6, main.py:26), Var($20load_attr.8, main.py:26)], kws=(), vararg=None, target=None) ['$14load_global.5', '$20load_attr.8', '$22call_function.9', '$const16.6']
    $const26.10 = const(NoneType, None)      ['$const26.10']
    $28return_value.11 = cast(value=$const26.10) ['$28return_value.11', '$const26.10']
    return $28return_value.11                ['$28return_value.11']

------------------------------IR DUMP: Qubit.print------------------------------
label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(print: <built-in function print>) ['$2load_global.0']
    $const4.1 = const(str, Spin Up: )        ['$const4.1']
    $8load_attr.3 = getattr(value=self, attr=up) ['$8load_attr.3', 'self']
    $10call_function.4 = call $2load_global.0($const4.1, $8load_attr.3, func=$2load_global.0, args=[Var($const4.1, main.py:25), Var($8load_attr.3, main.py:25)], kws=(), vararg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_attr.3', '$const4.1']
    $14load_global.5 = global(print: <built-in function print>) ['$14load_global.5']
    $const16.6 = const(str, Spin Down: )     ['$const16.6']
    $20load_attr.8 = getattr(value=self, attr=down) ['$20load_attr.8', 'self']
    $22call_function.9 = call $14load_global.5($const16.6, $20load_attr.8, func=$14load_global.5, args=[Var($const16.6, main.py:26), Var($20load_attr.8, main.py:26)], kws=(), vararg=None, target=None) ['$14load_global.5', '$20load_attr.8', '$22call_function.9', '$const16.6']
    $const26.10 = const(NoneType, None)      ['$const26.10']
    $28return_value.11 = cast(value=$const26.10) ['$28return_value.11', '$const26.10']
    return $28return_value.11                ['$28return_value.11']

______________________________________________________________________
REWRITING (RewritePrintCalls):
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(print: <built-in function print>) ['$2load_global.0']
    $const4.1 = const(str, Spin Up: )        ['$const4.1']
    $8load_attr.3 = getattr(value=self, attr=up) ['$8load_attr.3', 'self']
    $10call_function.4 = call $2load_global.0($const4.1, $8load_attr.3, func=$2load_global.0, args=[Var($const4.1, main.py:25), Var($8load_attr.3, main.py:25)], kws=(), vararg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_attr.3', '$const4.1']
    $14load_global.5 = global(print: <built-in function print>) ['$14load_global.5']
    $const16.6 = const(str, Spin Down: )     ['$const16.6']
    $20load_attr.8 = getattr(value=self, attr=down) ['$20load_attr.8', 'self']
    $22call_function.9 = call $14load_global.5($const16.6, $20load_attr.8, func=$14load_global.5, args=[Var($const16.6, main.py:26), Var($20load_attr.8, main.py:26)], kws=(), vararg=None, target=None) ['$14load_global.5', '$20load_attr.8', '$22call_function.9', '$const16.6']
    $const26.10 = const(NoneType, None)      ['$const26.10']
    $28return_value.11 = cast(value=$const26.10) ['$28return_value.11', '$const26.10']
    return $28return_value.11                ['$28return_value.11']
____________________________________________________________
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(print: <built-in function print>) ['$2load_global.0']
    $const4.1 = const(str, Spin Up: )        ['$const4.1']
    $8load_attr.3 = getattr(value=self, attr=up) ['$8load_attr.3', 'self']
    print($const4.1, $8load_attr.3)          ['$8load_attr.3', '$const4.1']
    $10call_function.4 = const(NoneType, None) ['$10call_function.4']
    $14load_global.5 = global(print: <built-in function print>) ['$14load_global.5']
    $const16.6 = const(str, Spin Down: )     ['$const16.6']
    $20load_attr.8 = getattr(value=self, attr=down) ['$20load_attr.8', 'self']
    print($const16.6, $20load_attr.8)        ['$20load_attr.8', '$const16.6']
    $22call_function.9 = const(NoneType, None) ['$22call_function.9']
    $const26.10 = const(NoneType, None)      ['$const26.10']
    $28return_value.11 = cast(value=$const26.10) ['$28return_value.11', '$const26.10']
    return $28return_value.11                ['$28return_value.11']
______________________________________________________________________
______________________________________________________________________
REWRITING (DetectConstPrintArguments):
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(print: <built-in function print>) ['$2load_global.0']
    $const4.1 = const(str, Spin Up: )        ['$const4.1']
    $8load_attr.3 = getattr(value=self, attr=up) ['$8load_attr.3', 'self']
    print($const4.1, $8load_attr.3)          ['$8load_attr.3', '$const4.1']
    $10call_function.4 = const(NoneType, None) ['$10call_function.4']
    $14load_global.5 = global(print: <built-in function print>) ['$14load_global.5']
    $const16.6 = const(str, Spin Down: )     ['$const16.6']
    $20load_attr.8 = getattr(value=self, attr=down) ['$20load_attr.8', 'self']
    print($const16.6, $20load_attr.8)        ['$20load_attr.8', '$const16.6']
    $22call_function.9 = const(NoneType, None) ['$22call_function.9']
    $const26.10 = const(NoneType, None)      ['$const26.10']
    $28return_value.11 = cast(value=$const26.10) ['$28return_value.11', '$const26.10']
    return $28return_value.11                ['$28return_value.11']
____________________________________________________________
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(print: <built-in function print>) ['$2load_global.0']
    $const4.1 = const(str, Spin Up: )        ['$const4.1']
    $8load_attr.3 = getattr(value=self, attr=up) ['$8load_attr.3', 'self']
    print($const4.1, $8load_attr.3)          ['$8load_attr.3', '$const4.1']
    $10call_function.4 = const(NoneType, None) ['$10call_function.4']
    $14load_global.5 = global(print: <built-in function print>) ['$14load_global.5']
    $const16.6 = const(str, Spin Down: )     ['$const16.6']
    $20load_attr.8 = getattr(value=self, attr=down) ['$20load_attr.8', 'self']
    print($const16.6, $20load_attr.8)        ['$20load_attr.8', '$const16.6']
    $22call_function.9 = const(NoneType, None) ['$22call_function.9']
    $const26.10 = const(NoneType, None)      ['$const26.10']
    $28return_value.11 = cast(value=$const26.10) ['$28return_value.11', '$const26.10']
    return $28return_value.11                ['$28return_value.11']
______________________________________________________________________
----------------LLVM DUMP <function descriptor 'Qubit.print$6'>-----------------
; ModuleID = "Qubit.print$6"
target triple = "x86_64-pc-windows-msvc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

@"_ZN08NumbaEnv8__main__5Qubit9print_246B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE" = common global i8* null
define i32 @"_ZN8__main__5Qubit9print_246B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"(i8** noalias nocapture %"retptr", {i8*, i32, i8*}** noalias nocapture %"excinfo", i8* %"arg.self.0", {float, float}* %"arg.self.1") 
{
entry:
  %"inserted.meminfo" = insertvalue {i8*, {float, float}*} undef, i8* %"arg.self.0", 0
  %"inserted.data" = insertvalue {i8*, {float, float}*} %"inserted.meminfo", {float, float}* %"arg.self.1", 1
  %".7" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".7"
  %".15" = alloca {i8*, i64, i32, i32, i64, i8*, i8*}
  store {i8*, i64, i32, i32, i64, i8*, i8*} zeroinitializer, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15"
  %".37" = alloca i32
  store i32 0, i32* %".37"
  %"try_state" = alloca i64
  store i64 0, i64* %"try_state"
  %".83" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".83"
  %".92" = alloca {i8*, i64, i32, i32, i64, i8*, i8*}
  store {i8*, i64, i32, i32, i64, i8*, i8*} zeroinitializer, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92"
  %".114" = alloca i32
  store i32 0, i32* %".114"
  br label %"B0"
B0:
  %"extracted.meminfo" = extractvalue {i8*, {float, float}*} %"inserted.data", 0
  %"extracted.data" = extractvalue {i8*, {float, float}*} %"inserted.data", 1
  call void @"NRT_incref"(i8* %"extracted.meminfo")
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".7"
  store {i8*, {float, float}*} %"inserted.data", {i8*, {float, float}*}* %".7"
  %".11" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".7", i32 0, i32 1
  %".12" = load {float, float}*, {float, float}** %".11"
  %".13" = getelementptr inbounds {float, float}, {float, float}* %".12", i32 0, i32 0
  %".14" = load float, float* %".13"
  store {i8*, i64, i32, i32, i64, i8*, i8*} zeroinitializer, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15"
  %".18" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15", i32 0, i32 0
  store i8* bitcast ([10 x i8]* @".bytes.-2789848206522866744" to i8*), i8** %".18"
  %".20" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15", i32 0, i32 1
  %".21" = load i64, i64* %".20"
  %".22" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15", i32 0, i32 1
  store i64 9, i64* %".22"
  %".24" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15", i32 0, i32 2
  %".25" = load i32, i32* %".24"
  %".26" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15", i32 0, i32 2
  store i32 1, i32* %".26"
  %".28" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15", i32 0, i32 3
  %".29" = load i32, i32* %".28"
  %".30" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15", i32 0, i32 3
  store i32 1, i32* %".30"
  %".32" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15", i32 0, i32 4
  %".33" = load i64, i64* %".32"
  %".34" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15", i32 0, i32 4
  store i64 -1, i64* %".34"
  %".36" = load {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".15"
  call void @"numba_gil_ensure"(i32* %".37")
  %".40" = load {i8*, i32, i8*}, {i8*, i32, i8*}* @".const.picklebuf.2335675607472"
  %".41" = extractvalue {i8*, i32, i8*} %".40", 0
  %".42" = load {i8*, i32, i8*}, {i8*, i32, i8*}* @".const.picklebuf.2335675607472"
  %".43" = extractvalue {i8*, i32, i8*} %".42", 1
  %".44" = load {i8*, i32, i8*}, {i8*, i32, i8*}* @".const.picklebuf.2335675607472"
  %".45" = extractvalue {i8*, i32, i8*} %".44", 2
  %".46" = call i8* @"numba_unpickle"(i8* %".41", i32 %".43", i8* %".45")
  %".47" = call i8* @"PyObject_Str"(i8* %".46")
  %".48" = call i8* @"PyUnicode_AsUTF8"(i8* %".47")
  call void (i8*, ...) @"PySys_FormatStdout"(i8* bitcast ([3 x i8]* @".const.%s" to i8*), i8* %".48")
  call void @"Py_DecRef"(i8* %".47")
  call void @"Py_DecRef"(i8* %".46")
  call void (i8*, ...) @"PySys_FormatStdout"(i8* bitcast ([2 x i8]* @".const. " to i8*))
  %".53" = load i8*, i8** @"_ZN08NumbaEnv8__main__5Qubit9print_246B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"
  %".54" = icmp eq i8* null, %".53"
  br i1 %".54", label %"B0.if", label %"B0.endif", !prof !1
B0.if:
  store {i8*, i32, i8*}* @".const.picklebuf.2335981241408", {i8*, i32, i8*}** %"excinfo"
  store i64 0, i64* %"try_state"
  %".59" = load i64, i64* %"try_state"
  %".60" = icmp ugt i64 %".59", 0
  %".61" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo"
  ret i32 1, !ret_is_raise !2
B0.endif:
  %".63" = ptrtoint i8* %".53" to i64
  %".64" = add i64 %".63", 16
  %".65" = inttoptr i64 %".64" to i8*
  %".66" = bitcast i8* %".65" to {i8*, i8*}*
  %".67" = fpext float %".14" to double
  %".68" = call i8* @"PyFloat_FromDouble"(double %".67")
  %".69" = icmp ne i8* null, %".68"
  br i1 %".69", label %"B0.endif.if", label %"B0.endif.else", !prof !3
B0.endif.if:
  %".71" = call i8* @"PyObject_Str"(i8* %".68")
  %".72" = call i8* @"PyUnicode_AsUTF8"(i8* %".71")
  call void (i8*, ...) @"PySys_FormatStdout"(i8* bitcast ([3 x i8]* @".const.%s" to i8*), i8* %".72")
  call void @"Py_DecRef"(i8* %".71")
  call void @"Py_DecRef"(i8* %".68")
  br label %"B0.endif.endif"
B0.endif.else:
  %".77" = call i8* @"PyUnicode_FromString"(i8* bitcast ([21 x i8]* @".const.the print() function" to i8*))
  call void @"PyErr_WriteUnraisable"(i8* %".77")
  call void @"Py_DecRef"(i8* %".77")
  br label %"B0.endif.endif"
B0.endif.endif:
  call void (i8*, ...) @"PySys_FormatStdout"(i8* bitcast ([2 x i8]* @".const.
" to i8*))
  call void @"numba_gil_release"(i32* %".37")
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".83"
  store {i8*, {float, float}*} %"inserted.data", {i8*, {float, float}*}* %".83"
  %".87" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".83", i32 0, i32 1
  %".88" = load {float, float}*, {float, float}** %".87"
  %".89" = getelementptr inbounds {float, float}, {float, float}* %".88", i32 0, i32 1
  %".90" = load float, float* %".89"
  %"extracted.meminfo.1" = extractvalue {i8*, {float, float}*} %"inserted.data", 0
  %"extracted.data.1" = extractvalue {i8*, {float, float}*} %"inserted.data", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.1")
  store {i8*, i64, i32, i32, i64, i8*, i8*} zeroinitializer, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92"
  %".95" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92", i32 0, i32 0
  store i8* bitcast ([12 x i8]* @".bytes.2836927490070597122" to i8*), i8** %".95"
  %".97" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92", i32 0, i32 1
  %".98" = load i64, i64* %".97"
  %".99" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92", i32 0, i32 1
  store i64 11, i64* %".99"
  %".101" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92", i32 0, i32 2
  %".102" = load i32, i32* %".101"
  %".103" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92", i32 0, i32 2
  store i32 1, i32* %".103"
  %".105" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92", i32 0, i32 3
  %".106" = load i32, i32* %".105"
  %".107" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92", i32 0, i32 3
  store i32 1, i32* %".107"
  %".109" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92", i32 0, i32 4
  %".110" = load i64, i64* %".109"
  %".111" = getelementptr inbounds {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92", i32 0, i32 4
  store i64 -1, i64* %".111"
  %".113" = load {i8*, i64, i32, i32, i64, i8*, i8*}, {i8*, i64, i32, i32, i64, i8*, i8*}* %".92"
  call void @"numba_gil_ensure"(i32* %".114")
  %".117" = load {i8*, i32, i8*}, {i8*, i32, i8*}* @".const.picklebuf.2335675607408"
  %".118" = extractvalue {i8*, i32, i8*} %".117", 0
  %".119" = load {i8*, i32, i8*}, {i8*, i32, i8*}* @".const.picklebuf.2335675607408"
  %".120" = extractvalue {i8*, i32, i8*} %".119", 1
  %".121" = load {i8*, i32, i8*}, {i8*, i32, i8*}* @".const.picklebuf.2335675607408"
  %".122" = extractvalue {i8*, i32, i8*} %".121", 2
  %".123" = call i8* @"numba_unpickle"(i8* %".118", i32 %".120", i8* %".122")
  %".124" = call i8* @"PyObject_Str"(i8* %".123")
  %".125" = call i8* @"PyUnicode_AsUTF8"(i8* %".124")
  call void (i8*, ...) @"PySys_FormatStdout"(i8* bitcast ([3 x i8]* @".const.%s" to i8*), i8* %".125")
  call void @"Py_DecRef"(i8* %".124")
  call void @"Py_DecRef"(i8* %".123")
  call void (i8*, ...) @"PySys_FormatStdout"(i8* bitcast ([2 x i8]* @".const. " to i8*))
  %".130" = load i8*, i8** @"_ZN08NumbaEnv8__main__5Qubit9print_246B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"
  %".131" = icmp eq i8* null, %".130"
  br i1 %".131", label %"B0.endif.endif.if", label %"B0.endif.endif.endif", !prof !1
B0.endif.endif.if:
  store {i8*, i32, i8*}* @".const.picklebuf.2335981241408", {i8*, i32, i8*}** %"excinfo"
  %".134" = load i64, i64* %"try_state"
  %".135" = icmp ugt i64 %".134", 0
  %".136" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo"
  ret i32 1, !ret_is_raise !2
B0.endif.endif.endif:
  %".138" = ptrtoint i8* %".130" to i64
  %".139" = add i64 %".138", 16
  %".140" = inttoptr i64 %".139" to i8*
  %".141" = bitcast i8* %".140" to {i8*, i8*}*
  %".142" = fpext float %".90" to double
  %".143" = call i8* @"PyFloat_FromDouble"(double %".142")
  %".144" = icmp ne i8* null, %".143"
  br i1 %".144", label %"B0.endif.endif.endif.if", label %"B0.endif.endif.endif.else", !prof !3
B0.endif.endif.endif.if:
  %".146" = call i8* @"PyObject_Str"(i8* %".143")
  %".147" = call i8* @"PyUnicode_AsUTF8"(i8* %".146")
  call void (i8*, ...) @"PySys_FormatStdout"(i8* bitcast ([3 x i8]* @".const.%s" to i8*), i8* %".147")
  call void @"Py_DecRef"(i8* %".146")
  call void @"Py_DecRef"(i8* %".143")
  br label %"B0.endif.endif.endif.endif"
B0.endif.endif.endif.else:
  %".152" = call i8* @"PyUnicode_FromString"(i8* bitcast ([21 x i8]* @".const.the print() function" to i8*))
  call void @"PyErr_WriteUnraisable"(i8* %".152")
  call void @"Py_DecRef"(i8* %".152")
  br label %"B0.endif.endif.endif.endif"
B0.endif.endif.endif.endif:
  call void (i8*, ...) @"PySys_FormatStdout"(i8* bitcast ([2 x i8]* @".const.
" to i8*))
  call void @"numba_gil_release"(i32* %".114")
  store i8* null, i8** %"retptr"
  ret i32 0
}

declare void @"NRT_incref"(i8* noalias nocapture %".1") 

@".bytes.-2789848206522866744" = internal constant [10 x i8] c"Spin Up: \00"
declare void @"numba_gil_ensure"(i32* %".1") 

@".const.pickledata.2335675607472" = internal constant [24 x i8] c"\80\04\95\0d\00\00\00\00\00\00\00\8c\09Spin Up: \94."
@".const.pickledata.2335675607472.sha1" = internal constant [20 x i8] c"\19\ec\f9:\87\adG\e3\8b\1f\ee\1c\cb/\85\9a6\abp-"
@".const.picklebuf.2335675607472" = internal constant {i8*, i32, i8*} {i8* bitcast ([24 x i8]* @".const.pickledata.2335675607472" to i8*), i32 24, i8* bitcast ([20 x i8]* @".const.pickledata.2335675607472.sha1" to i8*)}
declare i8* @"numba_unpickle"(i8* %".1", i32 %".2", i8* %".3") 

declare i8* @"PyObject_Str"(i8* %".1") 

declare i8* @"PyUnicode_AsUTF8"(i8* %".1") 

@".const.%s" = internal constant [3 x i8] c"%s\00"
declare void @"PySys_FormatStdout"(i8* %".1", ...) 

declare void @"Py_DecRef"(i8* %".1") 

@".const. " = internal constant [2 x i8] c" \00"
@".const.pickledata.2335981241408" = internal constant [229 x i8] c"\80\04\95\da\00\00\00\00\00\00\00\8c\08builtins\94\8c\0cRuntimeError\94\93\94\8c\b5missing Environment: _ZN08NumbaEnv8__main__5Qubit9print_246B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE\94\85\94N\87\94."
@".const.pickledata.2335981241408.sha1" = internal constant [20 x i8] c"'\12\99\0a\eb\bf\f6\df\e2}\c7\950\98\d2\16\ef\07\e2\88"
@".const.picklebuf.2335981241408" = internal constant {i8*, i32, i8*} {i8* bitcast ([229 x i8]* @".const.pickledata.2335981241408" to i8*), i32 229, i8* bitcast ([20 x i8]* @".const.pickledata.2335981241408.sha1" to i8*)}
declare i8* @"PyFloat_FromDouble"(double %".1") 

@".const.the print() function" = internal constant [21 x i8] c"the print() function\00"
declare i8* @"PyUnicode_FromString"(i8* %".1") 

declare void @"PyErr_WriteUnraisable"(i8* %".1") 

@".const.
" = internal constant [2 x i8] c"\0a\00"
declare void @"numba_gil_release"(i32* %".1") 

declare void @"NRT_decref"(i8* noalias nocapture %".1") 

@".bytes.2836927490070597122" = internal constant [12 x i8] c"Spin Down: \00"
@".const.pickledata.2335675607408" = internal constant [26 x i8] c"\80\04\95\0f\00\00\00\00\00\00\00\8c\0bSpin Down: \94."
@".const.pickledata.2335675607408.sha1" = internal constant [20 x i8] c"G\04\f8V\f9\12@\de 3\0b\9c\01L\af-\d5\8c\859"
@".const.picklebuf.2335675607408" = internal constant {i8*, i32, i8*} {i8* bitcast ([26 x i8]* @".const.pickledata.2335675607408" to i8*), i32 26, i8* bitcast ([20 x i8]* @".const.pickledata.2335675607408.sha1" to i8*)}
!numba_args_may_always_need_nrt = !{ !0 }
!0 = !{ i32 (i8**, {i8*, i32, i8*}**, i8*, {float, float}*)* @"_ZN8__main__5Qubit9print_246B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE" }
!1 = !{ !"branch_weights", i32 1, i32 99 }
!2 = !{ i1 1 }
!3 = !{ !"branch_weights", i32 99, i32 1 }
================================================================================
--------------------LLVM DUMP <function descriptor 'main$1'>--------------------
; ModuleID = "main$1"
target triple = "x86_64-pc-windows-msvc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

@"_ZN08NumbaEnv8__main__8main_241B46c8tJTIeFCjyCbUFRqqOAFv_2fYRdE1AT0EZmkCAA_3d_3dE" = common global i8* null
define i32 @"_ZN8__main__8main_241B46c8tJTIeFCjyCbUFRqqOAFv_2fYRdE1AT0EZmkCAA_3d_3dE"(i8** noalias nocapture %"retptr", {i8*, i32, i8*}** noalias nocapture %"excinfo") 
{
entry:
  %".9" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".9"
  %".17" = alloca i8*
  store i8* null, i8** %".17"
  %"excinfo.1" = alloca {i8*, i32, i8*}*
  store {i8*, i32, i8*}* null, {i8*, i32, i8*}** %"excinfo.1"
  %"try_state" = alloca i64
  store i64 0, i64* %"try_state"
  %".49" = alloca {i8*, {float, float}*}
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".49"
  %".57" = alloca i8*
  store i8* null, i8** %".57"
  %"excinfo.2" = alloca {i8*, i32, i8*}*
  store {i8*, i32, i8*}* null, {i8*, i32, i8*}** %"excinfo.2"
  %".83" = alloca i8*
  store i8* null, i8** %".83"
  %"excinfo.3" = alloca {i8*, i32, i8*}*
  store {i8*, i32, i8*}* null, {i8*, i32, i8*}** %"excinfo.3"
  %".110" = alloca i8*
  store i8* null, i8** %".110"
  %"excinfo.4" = alloca {i8*, i32, i8*}*
  store {i8*, i32, i8*}* null, {i8*, i32, i8*}** %"excinfo.4"
  %".137" = alloca i8*
  store i8* null, i8** %".137"
  %"excinfo.5" = alloca {i8*, i32, i8*}*
  store {i8*, i32, i8*}* null, {i8*, i32, i8*}** %"excinfo.5"
  br label %"B0"
B0:
  %".4" = bitcast void (i8*, i64, i8*)* @"_Dtor.instance.jitclass.Qubit#21fe2cdcf40<up:float32,down:float32>" to i8*
  %".5" = call i8* @"NRT_MemInfo_alloc_dtor_safe"(i64 8, i8* %".4")
  %".6" = call i8* @"NRT_MemInfo_data_fast"(i8* %".5")
  %".7" = bitcast i8* %".6" to {float, float}*
  store {float, float} zeroinitializer, {float, float}* %".7"
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".9"
  %".12" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".9", i32 0, i32 0
  store i8* %".5", i8** %".12"
  %".14" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".9", i32 0, i32 1
  store {float, float}* %".7", {float, float}** %".14"
  %".16" = load {i8*, {float, float}*}, {i8*, {float, float}*}* %".9"
  store i8* null, i8** %".17"
  %"extracted.meminfo" = extractvalue {i8*, {float, float}*} %".16", 0
  %"extracted.data" = extractvalue {i8*, {float, float}*} %".16", 1
  %".21" = call i32 @"_ZN8__main__5Qubit12__init___242B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_281_2923Literal_5bint_5d_280_29"(i8** %".17", {i8*, i32, i8*}** %"excinfo.1", i8* %"extracted.meminfo", {float, float}* %"extracted.data", i64 1, i64 0)
  %".22" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo.1"
  %".23" = icmp eq i32 %".21", 0
  %".24" = icmp eq i32 %".21", -2
  %".25" = icmp eq i32 %".21", -1
  %".26" = icmp eq i32 %".21", -3
  %".27" = or i1 %".23", %".24"
  %".28" = xor i1 %".27", -1
  %".29" = icmp sge i32 %".21", 1
  %".30" = select i1 %".29", {i8*, i32, i8*}* %".22", {i8*, i32, i8*}* undef
  %".31" = load i8*, i8** %".17"
  br i1 %".28", label %"B0.if", label %"B0.endif", !prof !1
B0.if:
  store i64 0, i64* %"try_state"
  %".35" = load i64, i64* %"try_state"
  %".36" = icmp ugt i64 %".35", 0
  %".37" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo"
  store {i8*, i32, i8*}* %".30", {i8*, i32, i8*}** %"excinfo"
  %".39" = xor i1 %".36", -1
  br i1 %".39", label %"B0.if.if", label %"B0.if.endif"
B0.endif:
  %".43" = load {i8*, {float, float}*}, {i8*, {float, float}*}* %".9"
  %".44" = bitcast void (i8*, i64, i8*)* @"_Dtor.instance.jitclass.Qubit#21fe2cdcf40<up:float32,down:float32>" to i8*
  %".45" = call i8* @"NRT_MemInfo_alloc_dtor_safe"(i64 8, i8* %".44")
  %".46" = call i8* @"NRT_MemInfo_data_fast"(i8* %".45")
  %".47" = bitcast i8* %".46" to {float, float}*
  store {float, float} zeroinitializer, {float, float}* %".47"
  store {i8*, {float, float}*} zeroinitializer, {i8*, {float, float}*}* %".49"
  %".52" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".49", i32 0, i32 0
  store i8* %".45", i8** %".52"
  %".54" = getelementptr inbounds {i8*, {float, float}*}, {i8*, {float, float}*}* %".49", i32 0, i32 1
  store {float, float}* %".47", {float, float}** %".54"
  %".56" = load {i8*, {float, float}*}, {i8*, {float, float}*}* %".49"
  store i8* null, i8** %".57"
  %"extracted.meminfo.1" = extractvalue {i8*, {float, float}*} %".56", 0
  %"extracted.data.1" = extractvalue {i8*, {float, float}*} %".56", 1
  %".61" = call i32 @"_ZN8__main__5Qubit12__init___243B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_280_2923Literal_5bint_5d_281_29"(i8** %".57", {i8*, i32, i8*}** %"excinfo.2", i8* %"extracted.meminfo.1", {float, float}* %"extracted.data.1", i64 0, i64 1)
  %".62" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo.2"
  %".63" = icmp eq i32 %".61", 0
  %".64" = icmp eq i32 %".61", -2
  %".65" = icmp eq i32 %".61", -1
  %".66" = icmp eq i32 %".61", -3
  %".67" = or i1 %".63", %".64"
  %".68" = xor i1 %".67", -1
  %".69" = icmp sge i32 %".61", 1
  %".70" = select i1 %".69", {i8*, i32, i8*}* %".62", {i8*, i32, i8*}* undef
  %".71" = load i8*, i8** %".57"
  br i1 %".68", label %"B0.endif.if", label %"B0.endif.endif", !prof !1
B0.if.if:
  ret i32 %".21", !ret_is_raise !2
B0.if.endif:
  br label %"B0.endif"
B0.endif.if:
  %".73" = load i64, i64* %"try_state"
  %".74" = icmp ugt i64 %".73", 0
  %".75" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo"
  store {i8*, i32, i8*}* %".70", {i8*, i32, i8*}** %"excinfo"
  %".77" = xor i1 %".74", -1
  br i1 %".77", label %"B0.endif.if.if", label %"B0.endif.if.endif"
B0.endif.endif:
  %".81" = load {i8*, {float, float}*}, {i8*, {float, float}*}* %".49"
  %"extracted.meminfo.2" = extractvalue {i8*, {float, float}*} %".43", 0
  %"extracted.data.2" = extractvalue {i8*, {float, float}*} %".43", 1
  call void @"NRT_incref"(i8* %"extracted.meminfo.2")
  store i8* null, i8** %".83"
  %"extracted.meminfo.3" = extractvalue {i8*, {float, float}*} %".43", 0
  %"extracted.data.3" = extractvalue {i8*, {float, float}*} %".43", 1
  %"extracted.meminfo.4" = extractvalue {i8*, {float, float}*} %".81", 0
  %"extracted.data.4" = extractvalue {i8*, {float, float}*} %".81", 1
  %".87" = call i32 @"_ZN8__main__5Qubit6CX_244B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"(i8** %".83", {i8*, i32, i8*}** %"excinfo.3", i8* %"extracted.meminfo.3", {float, float}* %"extracted.data.3", i8* %"extracted.meminfo.4", {float, float}* %"extracted.data.4")
  %".88" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo.3"
  %".89" = icmp eq i32 %".87", 0
  %".90" = icmp eq i32 %".87", -2
  %".91" = icmp eq i32 %".87", -1
  %".92" = icmp eq i32 %".87", -3
  %".93" = or i1 %".89", %".90"
  %".94" = xor i1 %".93", -1
  %".95" = icmp sge i32 %".87", 1
  %".96" = select i1 %".95", {i8*, i32, i8*}* %".88", {i8*, i32, i8*}* undef
  %".97" = load i8*, i8** %".83"
  br i1 %".94", label %"B0.endif.endif.if", label %"B0.endif.endif.endif", !prof !1
B0.endif.if.if:
  ret i32 %".61", !ret_is_raise !2
B0.endif.if.endif:
  br label %"B0.endif.endif"
B0.endif.endif.if:
  %".99" = load i64, i64* %"try_state"
  %".100" = icmp ugt i64 %".99", 0
  %".101" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo"
  store {i8*, i32, i8*}* %".96", {i8*, i32, i8*}** %"excinfo"
  %".103" = xor i1 %".100", -1
  br i1 %".103", label %"B0.endif.endif.if.if", label %"B0.endif.endif.if.endif"
B0.endif.endif.endif:
  %"extracted.meminfo.5" = extractvalue {i8*, {float, float}*} %".43", 0
  %"extracted.data.5" = extractvalue {i8*, {float, float}*} %".43", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.5")
  %"extracted.meminfo.6" = extractvalue {i8*, {float, float}*} %".43", 0
  %"extracted.data.6" = extractvalue {i8*, {float, float}*} %".43", 1
  call void @"NRT_incref"(i8* %"extracted.meminfo.6")
  %"extracted.meminfo.7" = extractvalue {i8*, {float, float}*} %".43", 0
  %"extracted.data.7" = extractvalue {i8*, {float, float}*} %".43", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.7")
  store i8* null, i8** %".110"
  %"extracted.meminfo.8" = extractvalue {i8*, {float, float}*} %".43", 0
  %"extracted.data.8" = extractvalue {i8*, {float, float}*} %".43", 1
  %".114" = call i32 @"_ZN8__main__5Qubit9print_246B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"(i8** %".110", {i8*, i32, i8*}** %"excinfo.4", i8* %"extracted.meminfo.8", {float, float}* %"extracted.data.8")
  %".115" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo.4"
  %".116" = icmp eq i32 %".114", 0
  %".117" = icmp eq i32 %".114", -2
  %".118" = icmp eq i32 %".114", -1
  %".119" = icmp eq i32 %".114", -3
  %".120" = or i1 %".116", %".117"
  %".121" = xor i1 %".120", -1
  %".122" = icmp sge i32 %".114", 1
  %".123" = select i1 %".122", {i8*, i32, i8*}* %".115", {i8*, i32, i8*}* undef
  %".124" = load i8*, i8** %".110"
  br i1 %".121", label %"B0.endif.endif.endif.if", label %"B0.endif.endif.endif.endif", !prof !1
B0.endif.endif.if.if:
  ret i32 %".87", !ret_is_raise !2
B0.endif.endif.if.endif:
  br label %"B0.endif.endif.endif"
B0.endif.endif.endif.if:
  %".126" = load i64, i64* %"try_state"
  %".127" = icmp ugt i64 %".126", 0
  %".128" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo"
  store {i8*, i32, i8*}* %".123", {i8*, i32, i8*}** %"excinfo"
  %".130" = xor i1 %".127", -1
  br i1 %".130", label %"B0.endif.endif.endif.if.if", label %"B0.endif.endif.endif.if.endif"
B0.endif.endif.endif.endif:
  %"extracted.meminfo.9" = extractvalue {i8*, {float, float}*} %".43", 0
  %"extracted.data.9" = extractvalue {i8*, {float, float}*} %".43", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.9")
  %"extracted.meminfo.10" = extractvalue {i8*, {float, float}*} %".81", 0
  %"extracted.data.10" = extractvalue {i8*, {float, float}*} %".81", 1
  call void @"NRT_incref"(i8* %"extracted.meminfo.10")
  %"extracted.meminfo.11" = extractvalue {i8*, {float, float}*} %".81", 0
  %"extracted.data.11" = extractvalue {i8*, {float, float}*} %".81", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.11")
  store i8* null, i8** %".137"
  %"extracted.meminfo.12" = extractvalue {i8*, {float, float}*} %".81", 0
  %"extracted.data.12" = extractvalue {i8*, {float, float}*} %".81", 1
  %".141" = call i32 @"_ZN8__main__5Qubit9print_246B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"(i8** %".137", {i8*, i32, i8*}** %"excinfo.5", i8* %"extracted.meminfo.12", {float, float}* %"extracted.data.12")
  %".142" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo.5"
  %".143" = icmp eq i32 %".141", 0
  %".144" = icmp eq i32 %".141", -2
  %".145" = icmp eq i32 %".141", -1
  %".146" = icmp eq i32 %".141", -3
  %".147" = or i1 %".143", %".144"
  %".148" = xor i1 %".147", -1
  %".149" = icmp sge i32 %".141", 1
  %".150" = select i1 %".149", {i8*, i32, i8*}* %".142", {i8*, i32, i8*}* undef
  %".151" = load i8*, i8** %".137"
  br i1 %".148", label %"B0.endif.endif.endif.endif.if", label %"B0.endif.endif.endif.endif.endif", !prof !1
B0.endif.endif.endif.if.if:
  ret i32 %".114", !ret_is_raise !2
B0.endif.endif.endif.if.endif:
  br label %"B0.endif.endif.endif.endif"
B0.endif.endif.endif.endif.if:
  %".153" = load i64, i64* %"try_state"
  %".154" = icmp ugt i64 %".153", 0
  %".155" = load {i8*, i32, i8*}*, {i8*, i32, i8*}** %"excinfo"
  store {i8*, i32, i8*}* %".150", {i8*, i32, i8*}** %"excinfo"
  %".157" = xor i1 %".154", -1
  br i1 %".157", label %"B0.endif.endif.endif.endif.if.if", label %"B0.endif.endif.endif.endif.if.endif"
B0.endif.endif.endif.endif.endif:
  %"extracted.meminfo.13" = extractvalue {i8*, {float, float}*} %".81", 0
  %"extracted.data.13" = extractvalue {i8*, {float, float}*} %".81", 1
  call void @"NRT_decref"(i8* %"extracted.meminfo.13")
  store i8* null, i8** %"retptr"
  ret i32 0
B0.endif.endif.endif.endif.if.if:
  ret i32 %".141", !ret_is_raise !2
B0.endif.endif.endif.endif.if.endif:
  br label %"B0.endif.endif.endif.endif.endif"
}

define void @"_Dtor.instance.jitclass.Qubit#21fe2cdcf40<up:float32,down:float32>"(i8* %".1", i64 %".2", i8* %".3") 
{
.5:
  %".6" = bitcast i8* %".1" to {float, float}*
  %".7" = load {float, float}, {float, float}* %".6"
  %"extracted.m_up" = extractvalue {float, float} %".7", 0
  %"extracted.m_down" = extractvalue {float, float} %".7", 1
  ret void
}

declare noalias i8* @"NRT_MemInfo_alloc_dtor_safe"(i64 %".1", i8* %".2") 

declare i8* @"NRT_MemInfo_data_fast"(i8* %".1") 

declare i32 @"_ZN8__main__5Qubit12__init___242B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_281_2923Literal_5bint_5d_280_29"(i8** noalias nocapture %"retptr", {i8*, i32, i8*}** noalias nocapture %"excinfo", i8* %"arg.self.0", {float, float}* %"arg.self.1", i64 %"arg.u", i64 %"arg.d") 

declare i32 @"_ZN8__main__5Qubit12__init___243B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_280_2923Literal_5bint_5d_281_29"(i8** noalias nocapture %"retptr", {i8*, i32, i8*}** noalias nocapture %"excinfo", i8* %"arg.self.0", {float, float}* %"arg.self.1", i64 %"arg.u", i64 %"arg.d") 

declare void @"NRT_incref"(i8* noalias nocapture %".1") 

declare i32 @"_ZN8__main__5Qubit6CX_244B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"(i8** noalias nocapture %"retptr", {i8*, i32, i8*}** noalias nocapture %"excinfo", i8* %"arg.self.0", {float, float}* %"arg.self.1", i8* %"arg.control.0", {float, float}* %"arg.control.1") 

declare void @"NRT_decref"(i8* noalias nocapture %".1") 

declare i32 @"_ZN8__main__5Qubit9print_246B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE"(i8** noalias nocapture %"retptr.1", {i8*, i32, i8*}** noalias nocapture %"excinfo.1", i8* %"arg.self.0.1", {float, float}* %"arg.self.1.1") 

!numba_args_may_always_need_nrt = !{ !0, !3, !4, !5, !5 }
!0 = !{ i32 (i8**, {i8*, i32, i8*}**, i8*, {float, float}*, i64, i64)* @"_ZN8__main__5Qubit12__init___242B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_281_2923Literal_5bint_5d_280_29" }
!1 = !{ !"branch_weights", i32 1, i32 99 }
!2 = !{ i1 1 }
!3 = !{ i32 (i8**, {i8*, i32, i8*}**, i8*, {float, float}*, i64, i64)* @"_ZN8__main__5Qubit12__init___243B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE23Literal_5bint_5d_280_2923Literal_5bint_5d_281_29" }
!4 = !{ i32 (i8**, {i8*, i32, i8*}**, i8*, {float, float}*, i8*, {float, float}*)* @"_ZN8__main__5Qubit6CX_244B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE" }
!5 = !{ i32 (i8**, {i8*, i32, i8*}**, i8*, {float, float}*)* @"_ZN8__main__5Qubit9print_246B42c8tJTIeFCjyCbUFRqqOAK_2f6h0kCng1maAA_3d_3dEN8instance8jitclass54Qubit_2321fe2cdcf40_3cup_3afloat32_2cdown_3afloat32_3eE" }
================================================================================
