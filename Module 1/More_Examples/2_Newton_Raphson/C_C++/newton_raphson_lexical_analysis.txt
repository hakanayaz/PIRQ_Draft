double 'double'                                  [StartOfLine]  Loc=<newton_raphson.cpp:10:1>
identifier 'function'                            [LeadingSpace] Loc=<newton_raphson.cpp:10:8>
l_paren '('                                      Loc=<newton_raphson.cpp:10:16>
double 'double'                                  Loc=<newton_raphson.cpp:10:17>
identifier 'x'                                   [LeadingSpace] Loc=<newton_raphson.cpp:10:24>
r_paren ')'                                      Loc=<newton_raphson.cpp:10:25>
l_brace '{'                                      [StartOfLine]  Loc=<newton_raphson.cpp:11:1>
return 'return'                                  [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:12:5>
l_paren '('                                      [LeadingSpace] Loc=<newton_raphson.cpp:12:12>
numeric_constant '4'                             Loc=<newton_raphson.cpp:12:13>
slash '/'                                        Loc=<newton_raphson.cpp:12:14>
numeric_constant '3'                             Loc=<newton_raphson.cpp:12:15>
r_paren ')'                                      Loc=<newton_raphson.cpp:12:16>
star '*'                                         Loc=<newton_raphson.cpp:12:17>
identifier 'x'                                   Loc=<newton_raphson.cpp:12:18>
star '*'                                         Loc=<newton_raphson.cpp:12:19>
identifier 'x'                                   Loc=<newton_raphson.cpp:12:20>
star '*'                                         Loc=<newton_raphson.cpp:12:21>
identifier 'x'                                   Loc=<newton_raphson.cpp:12:22>
minus '-'                                        [LeadingSpace] Loc=<newton_raphson.cpp:12:24>
l_paren '('                                      [LeadingSpace] Loc=<newton_raphson.cpp:12:26>
numeric_constant '3'                             Loc=<newton_raphson.cpp:12:27>
slash '/'                                        Loc=<newton_raphson.cpp:12:28>
numeric_constant '2'                             Loc=<newton_raphson.cpp:12:29>
r_paren ')'                                      Loc=<newton_raphson.cpp:12:30>
star '*'                                         Loc=<newton_raphson.cpp:12:31>
identifier 'x'                                   Loc=<newton_raphson.cpp:12:32>
star '*'                                         Loc=<newton_raphson.cpp:12:33>
identifier 'x'                                   Loc=<newton_raphson.cpp:12:34>
plus '+'                                         [LeadingSpace] Loc=<newton_raphson.cpp:12:36>
numeric_constant '8'                             [LeadingSpace] Loc=<newton_raphson.cpp:12:38>
semi ';'                                         Loc=<newton_raphson.cpp:12:39>
r_brace '}'                                      [StartOfLine]  Loc=<newton_raphson.cpp:13:1>
double 'double'                                  [StartOfLine]  Loc=<newton_raphson.cpp:16:1>
identifier 'derivedFunction'                     [LeadingSpace] Loc=<newton_raphson.cpp:16:8>
l_paren '('                                      Loc=<newton_raphson.cpp:16:23>
double 'double'                                  Loc=<newton_raphson.cpp:16:24>
identifier 'x'                                   [LeadingSpace] Loc=<newton_raphson.cpp:16:31>
r_paren ')'                                      Loc=<newton_raphson.cpp:16:32>
l_brace '{'                                      [StartOfLine]  Loc=<newton_raphson.cpp:17:1>
return 'return'                                  [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:18:5>
numeric_constant '4'                             [LeadingSpace] Loc=<newton_raphson.cpp:18:12>
star '*'                                         Loc=<newton_raphson.cpp:18:13>
identifier 'x'                                   Loc=<newton_raphson.cpp:18:14>
star '*'                                         Loc=<newton_raphson.cpp:18:15>
identifier 'x'                                   Loc=<newton_raphson.cpp:18:16>
minus '-'                                        [LeadingSpace] Loc=<newton_raphson.cpp:18:18>
numeric_constant '3'                             [LeadingSpace] Loc=<newton_raphson.cpp:18:20>
star '*'                                         Loc=<newton_raphson.cpp:18:21>
identifier 'x'                                   Loc=<newton_raphson.cpp:18:22>
semi ';'                                         Loc=<newton_raphson.cpp:18:23>
r_brace '}'                                      [StartOfLine]  Loc=<newton_raphson.cpp:19:1>
void 'void'                                      [StartOfLine]  Loc=<newton_raphson.cpp:22:1>
identifier 'newtonRaphson'                       [LeadingSpace] Loc=<newton_raphson.cpp:22:6>
l_paren '('                                      Loc=<newton_raphson.cpp:22:19>
double 'double'                                  Loc=<newton_raphson.cpp:22:20>
identifier 'x'                                   [LeadingSpace] Loc=<newton_raphson.cpp:22:27>
r_paren ')'                                      Loc=<newton_raphson.cpp:22:28>
l_brace '{'                                      [StartOfLine]  Loc=<newton_raphson.cpp:23:1>
double 'double'                                  [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:24:5>
identifier 'h'                                   [LeadingSpace] Loc=<newton_raphson.cpp:24:12>
equal '='                                        [LeadingSpace] Loc=<newton_raphson.cpp:24:14>
identifier 'function'                            [LeadingSpace] Loc=<newton_raphson.cpp:24:16>
l_paren '('                                      Loc=<newton_raphson.cpp:24:24>
identifier 'x'                                   Loc=<newton_raphson.cpp:24:25>
r_paren ')'                                      Loc=<newton_raphson.cpp:24:26>
slash '/'                                        [LeadingSpace] Loc=<newton_raphson.cpp:24:28>
identifier 'derivedFunction'                     [LeadingSpace] Loc=<newton_raphson.cpp:24:30>
l_paren '('                                      Loc=<newton_raphson.cpp:24:45>
identifier 'x'                                   Loc=<newton_raphson.cpp:24:46>
r_paren ')'                                      Loc=<newton_raphson.cpp:24:47>
semi ';'                                         Loc=<newton_raphson.cpp:24:48>
while 'while'                                    [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:25:5>
l_paren '('                                      [LeadingSpace] Loc=<newton_raphson.cpp:25:11>
identifier 'abs'                                 Loc=<newton_raphson.cpp:25:12>
l_paren '('                                      Loc=<newton_raphson.cpp:25:15>
identifier 'h'                                   Loc=<newton_raphson.cpp:25:16>
r_paren ')'                                      Loc=<newton_raphson.cpp:25:17>
greaterequal '>='                                [LeadingSpace] Loc=<newton_raphson.cpp:25:19>
identifier 'EPSILON'                             [LeadingSpace] Loc=<newton_raphson.cpp:25:22>
r_paren ')'                                      Loc=<newton_raphson.cpp:25:29>
l_brace '{'                                      [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:26:5>
identifier 'h'                                   [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:27:9>
equal '='                                        [LeadingSpace] Loc=<newton_raphson.cpp:27:11>
identifier 'function'                            [LeadingSpace] Loc=<newton_raphson.cpp:27:13>
l_paren '('                                      Loc=<newton_raphson.cpp:27:21>
identifier 'x'                                   Loc=<newton_raphson.cpp:27:22>
r_paren ')'                                      Loc=<newton_raphson.cpp:27:23>
slash '/'                                        Loc=<newton_raphson.cpp:27:24>
identifier 'derivedFunction'                     Loc=<newton_raphson.cpp:27:25>
l_paren '('                                      Loc=<newton_raphson.cpp:27:40>
identifier 'x'                                   Loc=<newton_raphson.cpp:27:41>
r_paren ')'                                      Loc=<newton_raphson.cpp:27:42>
semi ';'                                         Loc=<newton_raphson.cpp:27:43>
identifier 'x'                                   [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:30:9>
equal '='                                        [LeadingSpace] Loc=<newton_raphson.cpp:30:11>
identifier 'x'                                   [LeadingSpace] Loc=<newton_raphson.cpp:30:13>
minus '-'                                        [LeadingSpace] Loc=<newton_raphson.cpp:30:15>
identifier 'h'                                   [LeadingSpace] Loc=<newton_raphson.cpp:30:17>
semi ';'                                         Loc=<newton_raphson.cpp:30:18>
r_brace '}'                                      [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:31:5>
identifier 'std'                                 [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:32:5>
coloncolon '::'                                  Loc=<newton_raphson.cpp:32:8>
identifier 'cout'                                Loc=<newton_raphson.cpp:32:10>
lessless '<<'                                    [LeadingSpace] Loc=<newton_raphson.cpp:32:15>
string_literal '"The value of the root is : "'   [LeadingSpace] Loc=<newton_raphson.cpp:32:18>
lessless '<<'                                    [LeadingSpace] Loc=<newton_raphson.cpp:32:48>
identifier 'x'                                   [LeadingSpace] Loc=<newton_raphson.cpp:32:51>
semi ';'                                         Loc=<newton_raphson.cpp:32:52>
r_brace '}'                                      [StartOfLine]  Loc=<newton_raphson.cpp:33:1>
int 'int'                                        [StartOfLine]  Loc=<newton_raphson.cpp:35:1>
identifier 'main'                                [LeadingSpace] Loc=<newton_raphson.cpp:35:5>
l_paren '('                                      Loc=<newton_raphson.cpp:35:9>
r_paren ')'                                      Loc=<newton_raphson.cpp:35:10>
l_brace '{'                                      [StartOfLine]  Loc=<newton_raphson.cpp:36:1>
double 'double'                                  [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:37:5>
identifier 'x0'                                  [LeadingSpace] Loc=<newton_raphson.cpp:37:12>
equal '='                                        [LeadingSpace] Loc=<newton_raphson.cpp:37:15>
numeric_constant '5'                             [LeadingSpace] Loc=<newton_raphson.cpp:37:17>
semi ';'                                         Loc=<newton_raphson.cpp:37:18>
identifier 'newtonRaphson'                       [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:38:5>
l_paren '('                                      Loc=<newton_raphson.cpp:38:18>
identifier 'x0'                                  Loc=<newton_raphson.cpp:38:19>
r_paren ')'                                      Loc=<newton_raphson.cpp:38:21>
semi ';'                                         Loc=<newton_raphson.cpp:38:22>
return 'return'                                  [StartOfLine] [LeadingSpace]   Loc=<newton_raphson.cpp:39:5>
numeric_constant '0'                             [LeadingSpace] Loc=<newton_raphson.cpp:39:12>
semi ';'                                         Loc=<newton_raphson.cpp:39:13>
r_brace '}'                                      [StartOfLine]  Loc=<newton_raphson.cpp:40:1>
eof ''                                           Loc=<newton_raphson.cpp:40:2>